{"version":3,"sources":["components/Home.js","components/Header.js","components/Type.js","components/IncidentItem.js","components/Incident.js","components/questions/OptionQuestion.js","components/questions/OpenQuestion.js","components/questions/DateTimeQuestion.js","components/questions/OptionOrOtherOption.js","components/questions/SpecifyOrNoQuestion.js","components/questions/MultipleOptionQuestion.js","components/Questions.js","components/Success.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","src","alt","label","icon","group","type","validate","error","success","to","block","Header","text","backLink","color","size","Type","IncidentItem","title","img","style","border","incidents","Incident","map","incident","i","key","OptionQuestion","question","options","option","id","name","htmlFor","OpenQuestion","rows","DateTimeQuestion","useState","Date","selectedDate","handleDateChange","utils","DateFnsUtils","locale","nlBE","DateTimePicker","value","onChange","ampm","format","OptionOrOtherOption","state","radio","undefined","onClick","nr","setState","this","props","andereInput","React","Component","SpecifyOrNoQuestion","verklaarInput","MultipleOptionQuestion","questions","Questions","index","previous","next","previousDisabled","nextDisabled","length","nextButton","disabled","Success","clicked","click","notification","show","fade","iconClassName","message","position","bottom","left","right","zIndex","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.bed3bb6c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {MDBBtn, MDBCol, MDBInput, MDBRow} from \"mdbreact\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <MDBRow>\r\n            <MDBCol>\r\n                <form>\r\n                    <div className=\"text-center\">\r\n                        <img src=\"/logo.png\" alt=\"logo\"/>\r\n                    </div>\r\n                    <div className=\"grey-text\">\r\n                        <MDBInput label=\"Type your email\" icon=\"envelope\" group type=\"email\" validate error=\"wrong\"\r\n                                  success=\"right\" />\r\n                        <MDBInput label=\"Type your password\" icon=\"lock\" group type=\"password\" validate />\r\n                    </div>\r\n                    <div className=\"text-center mt-4\">\r\n                        <Link to={\"/type\"}>\r\n                            <MDBBtn block={true} type=\"submit\">Login</MDBBtn>\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n                <br/>\r\n                <hr/>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <img src=\"/kuleuven.png\" className=\"logo\" alt=\"logo\"/>\r\n                    <img src=\"/jensbnt.png\" className=\"logo\" alt=\"logo\"/>\r\n                </div>\r\n            </MDBCol>\r\n        </MDBRow>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {MDBBtn, MDBIcon} from \"mdbreact\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Header = ({text, backLink}) => {\r\n    return (\r\n        <>\r\n            <div className=\"d-flex align-items-center\">\r\n                <Link to={backLink}>\r\n                    <MDBBtn color={\"light-blue\"} size={\"sm\"} className=\"backButton\">\r\n                        <MDBIcon icon={\"fas fa-chevron-left\"}/>\r\n                    </MDBBtn>\r\n                </Link>\r\n                <h2 className=\"title\">{text}</h2>\r\n            </div>\r\n            <hr/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {MDBBtn} from \"mdbreact\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nconst Type = () => {\r\n    return (\r\n        <>\r\n            <Header text={\"Wat wilt u melden?\"} backLink={\"/\"}/>\r\n            <Link to={\"/incident\"}>\r\n                <MDBBtn block>Incident</MDBBtn>\r\n            </Link>\r\n            <p>bv: Val, prik, etc.</p>\r\n            <Link to={\"/incident\"}>\r\n                <MDBBtn block>Bijna-incident</MDBBtn>\r\n            </Link>\r\n            <p>Geen schade</p>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Type;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst IncidentItem = ({title, to, img, color}) => {\r\n    return (\r\n        <>\r\n            <Link to={to} className=\"incident-item\">\r\n                <div className=\"incident-img-wrapper\">\r\n                    <img src={img} alt={title} style={{border: '4px solid ' + color}}/>\r\n                </div>\r\n                <p className=\"incident-desc\">{title}</p>\r\n            </Link>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default IncidentItem;\r\n","import React from 'react';\r\nimport {MDBCol, MDBRow} from \"mdbreact\";\r\nimport Header from \"./Header\";\r\nimport IncidentItem from \"./IncidentItem\";\r\n\r\nconst incidents = [\r\n    {title: 'Agressie', to: '/questions', img: '/incident/fist.png', color: '#2BBBAD'},\r\n    {title: 'Arbeidsongeval', to: '/questions', img: '/incident/helmet.png', color: '#4285F4'},\r\n    {title: 'Brand', to: '/questions', img: '/incident/flame.png', color: '#aa66cc'},\r\n    {title: 'Bijna ongeval', to: '/questions', img: '/incident/accident.png', color: '#ff4444'},\r\n    {title: 'EHBO', to: '/questions', img: '/incident/ehbo.png', color: '#ffbb33'},\r\n    {title: 'Nood', to: '/questions', img: '/incident/sos.png', color: '#00C851'},\r\n    {title: 'Prik-, Snij-, Spatongeval', to: '/questions', img: '/incident/blood.png', color: '#33b5e5'},\r\n    {title: 'Ziekenhuis noodplanning', to: '/questions', img: '/incident/hospital.png', color: '#00695c'},\r\n    {title: 'Contact schadelijke stoffen', to: '/questions', img: '/incident/toxic.png', color: '#0d47a1'},\r\n];\r\n\r\nconst Incident = () => {\r\n    return (\r\n        <>\r\n            <Header text={\"Welk type incident?\"} backLink={\"/type\"}/>\r\n            <MDBRow>\r\n                {incidents.map((incident, i) => {\r\n                    return (\r\n                        <MDBCol key={i} size={\"4\"} className=\"incident-col\">\r\n                            <IncidentItem {...incident} />\r\n                        </MDBCol>\r\n                    )\r\n                })}\r\n            </MDBRow>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Incident;\r\n","import React from 'react';\r\n\r\nconst OptionQuestion = ({question, options}) => {\r\n    return (\r\n        <>\r\n            <p>{question}</p>\r\n            <form>\r\n                {options.map((option, i) => {\r\n                    return (\r\n                        <div className=\"custom-control custom-radio\" key={i}>\r\n                            <input type=\"radio\" id={\"r\" + i} name=\"radio\" className=\"custom-control-input\"/>\r\n                            <label className=\"custom-control-label\" htmlFor={\"r\" + i}>{option}</label>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </form>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default OptionQuestion;\r\n","import React from 'react';\r\nimport {MDBInput} from \"mdbreact\";\r\n\r\nconst OpenQuestion = ({question, label}) => {\r\n    return (\r\n        <>\r\n            <p>{question}</p>\r\n            <MDBInput type=\"textarea\" label={label} rows=\"7\"/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default OpenQuestion;\r\n","import React, {useState} from 'react';\r\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport {DateTimePicker} from \"@material-ui/pickers\";\r\nimport { nlBE } from \"date-fns/locale\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nconst DateTimeQuestion = ({question}) => {\r\n    const [selectedDate, handleDateChange] = useState(new Date());\r\n    return (\r\n        <>\r\n            <p>{question}</p>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={nlBE}>\r\n                <DateTimePicker value={selectedDate} onChange={handleDateChange}\r\n                                ampm={false} format=\"dd/MM/yyyy HH:mm\"/>\r\n            </MuiPickersUtilsProvider>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default DateTimeQuestion;\r\n","import React from 'react';\r\nimport {MDBInput} from \"mdbreact\";\r\n\r\nclass OptionOrOtherOption extends React.Component {\r\n    state = {\r\n        radio: undefined\r\n    }\r\n\r\n    onClick = nr => () => {\r\n        this.setState({\r\n            radio: nr\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {question, options} = this.props;\r\n        const {radio} = this.state;\r\n        const andereInput = radio === 0 ?\r\n            <MDBInput label=\"Andere\"/> :\r\n            undefined;\r\n\r\n        return (\r\n            <>\r\n                <p>{question}</p>\r\n                <form>\r\n                    {options.map((option, i) => {\r\n                        return (\r\n                            <div className=\"custom-control custom-radio\" key={i} onClick={this.onClick(i+1)}>\r\n                                <input type=\"radio\" id={\"r\" + i} name=\"radio\" className=\"custom-control-input\"/>\r\n                                <label className=\"custom-control-label\" htmlFor={\"r\" + i}>{option}</label>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <div className=\"custom-control custom-radio\" onClick={this.onClick(0)}>\r\n                        <input type=\"radio\" id=\"andere\" name=\"radio\" className=\"custom-control-input\"/>\r\n                        <label className=\"custom-control-label\" htmlFor=\"andere\">Andere</label>\r\n                    </div>\r\n                    {andereInput}\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OptionOrOtherOption;\r\n","import React from 'react';\r\nimport {MDBInput} from \"mdbreact\";\r\n\r\nclass SpecifyOrNoQuestion extends React.Component {\r\n    state = {\r\n        radio: 2\r\n    }\r\n\r\n    onClick = nr => () => {\r\n        this.setState({\r\n            radio: nr\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {question} = this.props;\r\n        const {radio} = this.state;\r\n        const verklaarInput = radio === 0 ?\r\n            <MDBInput label=\"Verklaar\"/> :\r\n            undefined;\r\n\r\n        return (\r\n            <>\r\n                <p>{question}</p>\r\n                <form>\r\n                    <div className=\"custom-control custom-radio\" onClick={this.onClick(0)}>\r\n                        <input type=\"radio\" id=\"ja\" name=\"radio\" className=\"custom-control-input\"/>\r\n                        <label className=\"custom-control-label\" htmlFor=\"ja\">Ja</label>\r\n                    </div>\r\n                    {verklaarInput}\r\n                    <div className=\"custom-control custom-radio\" onClick={this.onClick(1)}>\r\n                        <input type=\"radio\" id=\"nee\" name=\"radio\" className=\"custom-control-input\"/>\r\n                        <label className=\"custom-control-label\" htmlFor=\"nee\">Nee</label>\r\n                    </div>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SpecifyOrNoQuestion;\r\n","import React from 'react';\r\n\r\nconst MultipleOptionQuestion = ({question, options}) => {\r\n    return (\r\n        <>\r\n            <p>{question}</p>\r\n            <form>\r\n                {options.map((option, i) => {\r\n                    return (\r\n                        <div className=\"custom-control custom-checkbox\" key={i}>\r\n                            <input type=\"checkbox\" id={\"r\" + i} name=\"radio\" className=\"custom-control-input\"/>\r\n                            <label className=\"custom-control-label\" htmlFor={\"r\" + i}>{option}</label>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </form>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default MultipleOptionQuestion;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport OptionQuestion from \"./questions/OptionQuestion\";\r\nimport OpenQuestion from \"./questions/OpenQuestion\";\r\nimport DateTimeQuestion from \"./questions/DateTimeQuestion\";\r\nimport {MDBBtn, MDBIcon} from \"mdbreact\";\r\nimport OptionOrOtherOption from \"./questions/OptionOrOtherOption\";\r\nimport SpecifyOrNoQuestion from \"./questions/SpecifyOrNoQuestion\";\r\nimport MultipleOptionQuestion from \"./questions/MultipleOptionQuestion\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst yesNoOptions = [\"Ja\", \"Nee\"];\r\nconst options1 = [\"Struikelen\", \"Vallen\", \"Voorwerp\"];\r\nconst options2 = [\"Gebruikelijke werkplek\", \"Occasionele werkplek\", \"Onderweg naar de werkplek\"];\r\nconst options3 = [\"Enkel lichamelijke schade\", \"Materiële en lichamelijke schade\"];\r\nconst options4 = [\"Geen\", \"IDEWE\", \"Spoed\", \"Dokter\", \"Apotheek\", \"Nieuwe bril\", \"Prothese\"];\r\nconst options5 = [\"Zoveel mogelijk laten uitbloeden\", \"Goed reinigen en ontsmetten met chloorhexidine 0,5% in alcohol 70°\"];\r\n\r\nconst questions = [\r\n    <OptionQuestion question={\"Was er een getuige aanwezig?\"} options={yesNoOptions}/>,\r\n    <OpenQuestion question={\"Wat was de locatie?\"} label={\"Locatie\"}/>,\r\n    <DateTimeQuestion question={\"Wanneer gebeurde het incident?\"}/>,\r\n    <DateTimeQuestion\r\n        question={\"Wanneer werd de leidinggevende of werkgever op de hoogte gebracht van het incident?\"}/>,\r\n    <OpenQuestion question={\"Geef een korte omschrijving van de gebeurtenis.\"}/>,\r\n    <OptionOrOtherOption question={\"Welke afwijkende gebeurtenis heeft geleid tot het ongeval?\"} options={options1}/>,\r\n    <OpenQuestion question={\"Welke specifieke activiteit was u aan het uitvoeren toen het incident zich voordeed?\"}\r\n                  label={\"Activiteit\"}/>,\r\n    <OptionOrOtherOption question={\"Aan welke werkplek stond u tijdens het incident?\"} options={options2}/>,\r\n    <OptionQuestion question={\"Welke schade liep u op als gevolg van het incident?\"} options={options3}/>,\r\n    <OptionOrOtherOption question={\"Welke kosten in verband met deze gebeurtenis wilt u vergoed zien?\"}\r\n                         options={options4}/>,\r\n    <SpecifyOrNoQuestion question={\"Droeg u beschermmiddelen?\"}/>,\r\n    <SpecifyOrNoQuestion question={\"Had de gebeurtenis vermeden kunnen worden?\"}/>,\r\n    <MultipleOptionQuestion question={\"Welke verzorginsmaatregelen heeft u genomen\"} options={options5}/>,\r\n]\r\n\r\nclass Questions extends React.Component {\r\n    state = {\r\n        index: 0\r\n    }\r\n\r\n    previous = () => this.setState({index: this.state.index - 1})\r\n    next = () => this.setState({index: this.state.index + 1})\r\n\r\n    previousDisabled = () => this.state.index <= 0;\r\n    nextDisabled = () => this.state.index >= questions.length - 1;\r\n\r\n    render() {\r\n        const nextButton = this.nextDisabled() ?\r\n            <Link to={\"/success\"}>\r\n                <MDBBtn color=\"light-blue\"><MDBIcon icon={\"fas fa-paper-plane\"}/></MDBBtn>\r\n            </Link>\r\n            :\r\n            <MDBBtn disabled={this.nextDisabled()} onClick={this.next}>\r\n                <MDBIcon icon={\"fa fa-chevron-right\"}/>\r\n            </MDBBtn>\r\n        ;\r\n        return (\r\n            <>\r\n                <Header text={\"Vragen\"} backLink={\"/Incident\"}/>\r\n                {questions[this.state.index]}\r\n                <div className=\"arrows\">\r\n                    <MDBBtn disabled={this.previousDisabled()} onClick={this.previous}>\r\n                        <MDBIcon icon={\"fa fa-chevron-left\"}/>\r\n                    </MDBBtn>\r\n                    <p className=\"mb-0\">{this.state.index + 1} / {questions.length}</p>\r\n                    {nextButton}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Questions;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {MDBBtn, MDBNotification} from \"mdbreact\";\r\n\r\nclass Success extends React.Component {\r\n    state = {\r\n        clicked: false\r\n    }\r\n\r\n    click = () => this.setState({clicked: true})\r\n\r\n    render() {\r\n        const notification = !this.state.clicked ? undefined :\r\n            <MDBNotification\r\n                show\r\n                fade\r\n                iconClassName=\"text-default\"\r\n                title=\"R@W\"\r\n                message=\"Email verstuurd\"\r\n                style={{\r\n                    position: \"fixed\",\r\n                    bottom: \"10px\",\r\n                    left: \"10px\",\r\n                    right: \"10px\",\r\n                    zIndex: 9999\r\n                }}\r\n            />;\r\n        return (\r\n            <>\r\n                <Header text={\"Bedankt!\"} backLink={\"/\"}/>\r\n                <MDBBtn onClick={this.click} block>Email notificatie</MDBBtn>\r\n                <p>Stuur een email als bevestiging.</p>\r\n                {notification}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Success;\r\n","import React from 'react';\nimport './App.scss'\nimport {MDBContainer} from \"mdbreact\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Type from \"./components/Type\";\nimport Incident from \"./components/Incident\";\nimport Questions from \"./components/Questions\";\nimport Success from \"./components/Success\";\n\nfunction App() {\n    return (\n        <MDBContainer>\n            <HashRouter>\n                <Switch>\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route exact path=\"/type\" component={Type}/>\n                    <Route exact path=\"/incident\" component={Incident}/>\n                    <Route exact path=\"/questions\" component={Questions}/>\n                    <Route exact path=\"/success\" component={Success}/>\n                </Switch>\n            </HashRouter>\n        </MDBContainer>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}